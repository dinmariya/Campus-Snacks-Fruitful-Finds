
package admin;
import CONNECTOR.DBconnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rachel
 */
public class AdminSales extends javax.swing.JFrame {
    private String adminName, adID,adpass,adname, adpassword;
    private ImageIcon adminImage;


   public AdminSales(String adminName, ImageIcon adminImage) {
       initComponents();
        this.adminName = adminName;  
        this.adminImage = adminImage;
        customizeTableHeaders();
        loadCategoryData(0, Product_table, Total_Sales, Total_Inventory, Total_stock); 
   }
        // Set admin details in the AdminSales UI
    
   private void customizeTableHeaders() {
        // Define column headers
        String[] columnHeaders = {"Product Name", "Price", "Beginning Inventory", "Stocks"};

    // Create a DefaultTableModel with column headers, overriding the isCellEditable method
    DefaultTableModel model = new DefaultTableModel(columnHeaders, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            // All cells are not editable
            return false;
        }
    };

    // Set the model to the table
    Product_table.setModel(model);

    // Adjust column widths
    Product_table.getColumnModel().getColumn(0).setPreferredWidth(220); // Product Name
    Product_table.getColumnModel().getColumn(1).setPreferredWidth(100); // Price
    Product_table.getColumnModel().getColumn(2).setPreferredWidth(200); // Beginning Inventory
    Product_table.getColumnModel().getColumn(3).setPreferredWidth(100); // Stocks
}
    private void loadCategoryData(int categoryID, JTable table, JLabel salesLabel, JLabel inventoryLabel, JLabel stockLabel) {
        String query;
    if (categoryID == 0) {
        // Query to fetch all products regardless of category
        query = "SELECT productName, price, Beginning_Inventory, stocks FROM Products";
    } else {
        // Query to fetch products for a specific category
        query = "SELECT productName, price, Beginning_Inventory, stocks FROM Products WHERE categoryID = ?";
    }

    try (Connection con = new DBconnect().connect();
         PreparedStatement stmt = con.prepareStatement(query)) {

        if (categoryID != 0) {
            stmt.setInt(1, categoryID);
        }

        ResultSet rs = stmt.executeQuery();

        // Clear existing table data
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);

        // Variables to calculate totals
        double totalSales = 0;
        int totalInventory = 0;
        int totalStock = 0;

        // Populate table and calculate totals
        while (rs.next()) {
            String productName = rs.getString("productName");
            double price = rs.getDouble("price");
            int beginningInventory = rs.getInt("Beginning_Inventory");
            int stocks = rs.getInt("stocks");

            // Add row to table
            model.addRow(new Object[]{productName, price, beginningInventory, stocks});

            // Calculate totals
            totalSales += (beginningInventory - stocks) * price; // Sales for the product
            totalInventory += beginningInventory; // Sum of beginning inventories
            totalStock += stocks; // Sum of remaining stocks
        }

        // Update labels
        salesLabel.setText(" â‚±" + totalSales);
        inventoryLabel.setText(" " + totalInventory);
        stockLabel.setText(" " + totalStock);

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        UserMenu = new javax.swing.JLabel();
        Sales_Back = new javax.swing.JButton();
        Fruits = new javax.swing.JButton();
        Pastry = new javax.swing.JButton();
        Drinks = new javax.swing.JButton();
        All = new javax.swing.JButton();
        Chips = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Product_table = new javax.swing.JTable();
        Total_stock = new javax.swing.JLabel();
        Total_Inventory = new javax.swing.JLabel();
        justtable3 = new javax.swing.JLabel();
        just_table = new javax.swing.JLabel();
        justtable2 = new javax.swing.JLabel();
        Total_Sales = new javax.swing.JLabel();

        canvas1.setPreferredSize(new java.awt.Dimension(400, 575));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(29, 126, 55)));

        UserMenu.setFont(new java.awt.Font("Javanese Text", 1, 36)); // NOI18N
        UserMenu.setForeground(new java.awt.Color(29, 126, 55));
        UserMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UserMenu.setText("Sales");
        UserMenu.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        UserMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        UserMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Sales_Back.setBackground(new java.awt.Color(73, 73, 73));
        Sales_Back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Sales_Back.setForeground(new java.awt.Color(235, 235, 235));
        Sales_Back.setText("<");
        Sales_Back.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));
        Sales_Back.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Sales_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sales_BackActionPerformed(evt);
            }
        });

        Fruits.setBackground(new java.awt.Color(255, 204, 255));
        Fruits.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        Fruits.setText("Fruits");
        Fruits.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Fruits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FruitsActionPerformed(evt);
            }
        });

        Pastry.setBackground(new java.awt.Color(255, 204, 255));
        Pastry.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        Pastry.setText("Pastry");
        Pastry.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Pastry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PastryActionPerformed(evt);
            }
        });

        Drinks.setBackground(new java.awt.Color(255, 204, 255));
        Drinks.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        Drinks.setText("Drinks");
        Drinks.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Drinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrinksActionPerformed(evt);
            }
        });

        All.setBackground(new java.awt.Color(255, 204, 255));
        All.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        All.setText("All ");
        All.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllActionPerformed(evt);
            }
        });

        Chips.setBackground(new java.awt.Color(255, 204, 255));
        Chips.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        Chips.setText("Chips");
        Chips.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Chips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChipsActionPerformed(evt);
            }
        });

        Product_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Begin Inventory", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Product_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        Product_table.getTableHeader().setResizingAllowed(false);
        jScrollPane1.setViewportView(Product_table);

        Total_stock.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        Total_stock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(168, 168, 168)));

        Total_Inventory.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        Total_Inventory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(168, 168, 168)));

        justtable3.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        justtable3.setText("Total Stocks");

        just_table.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        just_table.setText("Total Sales ");

        justtable2.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        justtable2.setText("Total Inventory");

        Total_Sales.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        Total_Sales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(168, 168, 168)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(All, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Chips, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Fruits, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(Pastry, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Drinks, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(just_table)
                                    .addComponent(Total_Sales, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Total_Inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(justtable2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Sales_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(justtable3)
                                    .addComponent(Total_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(UserMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(UserMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(All)
                    .addComponent(Chips)
                    .addComponent(Fruits)
                    .addComponent(Pastry)
                    .addComponent(Drinks))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(just_table, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(justtable2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Total_Inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Total_Sales, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(justtable3)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Total_stock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sales_Back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Sales_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sales_BackActionPerformed
       AdminDashFrame admin = new AdminDashFrame(adminName, adminImage);
       admin.setVisible(true);
       admin.pack();
       this.dispose();
    }//GEN-LAST:event_Sales_BackActionPerformed

    private void FruitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FruitsActionPerformed
       loadCategoryData(2, Product_table, Total_Sales, Total_Inventory, Total_stock);
   
    }//GEN-LAST:event_FruitsActionPerformed

    private void PastryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PastryActionPerformed
        // TODO add your handling code here:
        loadCategoryData(3, Product_table, Total_Sales, Total_Inventory, Total_stock);
    
    }//GEN-LAST:event_PastryActionPerformed

    private void DrinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DrinksActionPerformed
        // TODO add your handling code here:
        loadCategoryData(4, Product_table, Total_Sales, Total_Inventory, Total_stock);
    
    }//GEN-LAST:event_DrinksActionPerformed

    private void AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllActionPerformed
        // TODO add your handling code here:
        loadCategoryData(0, Product_table, Total_Sales, Total_Inventory, Total_stock); // 0 indicates all categories
        
    }//GEN-LAST:event_AllActionPerformed

    private void ChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChipsActionPerformed
        // TODO add your handling code here:
        loadCategoryData(1, Product_table, Total_Sales, Total_Inventory, Total_stock);
    
    
        
    }//GEN-LAST:event_ChipsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
  
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String adminName=null; 
                ImageIcon adminImage=null;
                new AdminSales(adminName, adminImage).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton All;
    private javax.swing.JButton Chips;
    private javax.swing.JButton Drinks;
    private javax.swing.JButton Fruits;
    private javax.swing.JButton Pastry;
    private javax.swing.JTable Product_table;
    private javax.swing.JButton Sales_Back;
    private javax.swing.JLabel Total_Inventory;
    private javax.swing.JLabel Total_Sales;
    private javax.swing.JLabel Total_stock;
    private javax.swing.JLabel UserMenu;
    private java.awt.Canvas canvas1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel just_table;
    private javax.swing.JLabel justtable2;
    private javax.swing.JLabel justtable3;
    // End of variables declaration//GEN-END:variables
}
